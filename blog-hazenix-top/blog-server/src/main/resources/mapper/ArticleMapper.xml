<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.hazenix.mapper.ArticleMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into article (title,content,cover_image,category_id,like_count,favorite_count,view_count,slug,status,create_time,update_time)
        values (#{title},#{content},#{coverImage},#{categoryId},#{likeCount},#{favoriteCount},#{viewCount},#{slug},#{status},#{createTime},#{updateTime})
    </insert>
    <update id="update">
        update article
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="coverImage != null">
                cover_image = #{coverImage},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
            <if test="likeCount != null">
                like_count = #{likeCount},
            </if>
            <if test="favoriteCount != null">
                favorite_count = #{favoriteCount},
            </if>
            <if test="viewCount != null">
                view_count = #{viewCount},
            </if>
            <if test="slug != null">
                slug = #{slug},
            </if>
            <if test="isTop != null">
                is_top = #{isTop},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteByIds">
        delete from article where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>


    <select id="count" resultType="java.lang.Integer">
        select count(*) from article
    </select>
    <select id="getRecentArticles" resultType="top.hazenix.vo.ArticleShortVO">
        select id,title,status,create_time from article order by update_time desc limit #{i}
    </select>
    <select id="pageQuery" resultType="top.hazenix.vo.ArticleShortVO">
        select id,title,status,create_time,is_top,like_count,favorite_count,view_count
        from article
        <where>
            <if test="keyword != null and keyword != ''">
                and title like concat('%',#{keyword},'%')
            </if>
            <if test="categoryId != null ">
                and category_id = #{categoryId}
            </if>
            <if test="status != null ">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="getById" resultType="top.hazenix.entity.Article">
        select * from article where id = #{id}
    </select>
    <select id="countByIds" resultType="java.lang.Integer">
        select count(id) from article where category_id in
                                          <foreach collection="ids" item="id" separator="," open="(" close=")">#{id}</foreach>
    </select>
    <select id="getArticleList" resultType="top.hazenix.entity.Article">
        select * from article
        <where>
            <if test="title != null and title != ''">title like concat('%',#{title},'%')</if>
            <if test="categoryId != null">and category_id = #{categoryId}</if>
            <if test="status != null">and status = #{status}</if>
            <if test="tagId != null">and id in (select article_id from article_tags where tags_id = #{tagId})</if>
            <if test="userId != null">and id in (select article_id from user_article where user_id = #{userId} and is_favorite = 1)</if>
        </where>
        order by create_time desc
    </select>
    <select id="getBySlug" resultType="top.hazenix.entity.Article">
        select * from article where slug = #{slug}
    </select>
    <select id="getPopularArticles" resultType="top.hazenix.entity.Article">
        select * from article order by (like_count+view_count) desc limit #{i}
    </select>
    <select id="getRelatedArticlesByTags" resultType="top.hazenix.vo.ArticleShortVO">
        SELECT a.id, a.title, a.create_time, a.like_count, a.favorite_count, a.view_count
        FROM article a
        JOIN (
        SELECT at.article_id, COUNT(*) as common_tag_count
        FROM article_tags at
        WHERE at.tags_id IN
        <foreach item="tagId" collection="tagIds" open="(" separator="," close=")">
            #{tagId}
        </foreach>
        AND at.article_id != #{articleId}
        GROUP BY at.article_id
        ORDER BY common_tag_count DESC
        LIMIT #{limit}
        ) ranked ON a.id = ranked.article_id
        WHERE a.status = 0
        ORDER BY ranked.common_tag_count DESC
    </select>
    <select id="getRelatedArticlesByCategory" resultType="top.hazenix.vo.ArticleShortVO">
        SELECT id, title, create_time, like_count, favorite_count, view_count
        FROM article
        WHERE id != #{articleId}
          AND category_id = #{categoryId}
          AND status = 0
        ORDER BY create_time DESC
            LIMIT #{limit}
    </select>
</mapper>
